node{

echo "Build number: ${env.BUILD_NUMBER}"
echo "Job name is : ${env.JOB_NAME}"
echo "Node name is : ${env.NODE_NAME}"

def mavenHome = tool name: "maven3.8.5" 

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

try{

stage('CheckoutCode'){
git branch: 'development', credentialsId: '5bccd71d-0f78-4915-b77d-ff9f84457ded',
 url: 'https://github.com/Prajwal3007/maven-web-application.git'
}	

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"             
}

stage('UploadArtifactIntoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}

stage('DeployApplicationIntoTomcatServer'){           
sshagent(['d78b13d2-afb9-4644-a3b1-0e12d65d3be1']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.1.122:/opt/apache-tomcat-9.0.68/webapps/"             
}
}
*/

}// try closing

catch(e){
current.Buildresult = "Failure"
}
finally{
sendslacknotifications(current.Buildresult)
}

}//Node Closing

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

